/*
* LookupTable.cpp
*
*  Created on: 2014/11/4
*      Author: Chun-Hsien Lin (D03922030)
* Description: Using OpenCV API and a look up table
*              to reconstruct the distortion image acquired
*              from fish eye lens.
*
*/
#include <iostream>
#include <sstream>
#include <time.h>
#include <stdio.h>
#include <fstream>
#define _USE_MATH_DEFINES
#include <math.h>
#include "opencv.hpp"
#include "opencv2/core/core.hpp"
#include "opencv2/imgproc/imgproc.hpp"
#include "opencv2/calib3d/calib3d.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "cvaux.hpp"

#ifndef _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_WARNINGS
#endif

using namespace std;
using namespace cv;

int main(int argc, const char * argv[])
{
// Declare the variable for look up table, input view, output view, and so on.
	double lut[] = {
			0,
			4.38797235520332,
			8.78010323704483,
			13.1757480310648,
			17.5742621228035,
			21.9750008978012,
			26.3773197415981,
			30.7805740397345,
			35.1841191777507,
			39.5873105411869,
			43.9895035155833,
			48.3900534864804,
			52.7883158394182,
			57.1836459599371,
			61.5753992335774,
			65.9629310458792,
			70.3455967823828,
			74.7227518286286,
			79.0937515701568,
			83.4579513925076,
			87.8147066812213,
			92.1633728218381,
			96.5033051998984,
			100.833859200942,
			105.154390210510,
			109.464253614142,
			113.762804797379,
			118.049399145760,
			122.323392044826,
			126.584138880118,
			130.830995037175,
			135.063315901537,
			139.280456858746,
			143.481773294341,
			147.666620593863,
			151.834354142851,
			155.984329326847,
			160.115901531389,
			164.228426142020,
			168.321258544278,
			172.393754123705,
			176.445268265839,
			180.475156356223,
			184.482773780395,
			188.467475923896,
			192.428618172267,
			196.365555911048,
			200.277644525778,
			204.164239401999,
			208.024695925250,
			211.858369481072,
			215.664615455005,
			219.442789232589,
			223.192246199364,
			226.912341740872,
			230.602431242651,
			234.261870090243,
			237.890013669187,
			241.486217365024,
			245.049836563294,
			248.580226649537,
			252.076743009294,
			255.538741028105,
			258.965576091510,
			262.356603585049,
			265.711178894263,
			269.028657404692,
			272.308394501876,
			275.549745571356,
			278.752065998671,
			281.914711169362,
			285.037036468969,
			288.118397283033,
			291.158148997094,
			294.155646996691,
			297.110246667366,
			300.021303394658,
			302.888172564108,
			305.710209561256,
			308.486769771642,
			311.217208580807,
			313.900881374291,
			316.537143537633,
			319.125350456375,
			321.664857516057,
			324.155020102219,
			326.595193600400,
			328.984733396142,
			331.322994874985,
			333.609333422468,
			335.843104424133,
			338.023663265519,
			340.150365332167,
			342.222566009617,
			344.239620683409,
			346.200884739083,
			348.105713562180,
			349.953462538240,
			351.743487052804,
			353.475142491411,
			355.147784239601
	};
	Size imageSize;
	cv::Mat view;
	cv::Mat rview(1000,1000,CV_8UC3);
	cv::Mat map1, map2;
	vector<int> compression_params;
	int rowIdx, colIdx;
//	int newRow, newCol;
// Mat::operator IplImage() const
	view = imread("1.png", CV_LOAD_IMAGE_COLOR);
	imshow("Image View", view);
	imageSize = view.size();

	char c = (char)waitKey();

	return 0;
}
